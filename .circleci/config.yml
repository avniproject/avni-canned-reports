version: 2.1
commands:
  deploy:
    description: "Deployment of avni-canned-reports"
    parameters:
      hostname:
        type: string
        default: "ssh.staging.openchs.org"
    steps:
      - attach_workspace:
          at: ~/artifacts

      - run:
          name: Install dependencies
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install make openssl python3-pip
            sudo pip3 install awscli --upgrade

      - run:
          name: Copy artifacts to server
          command: |
            scp -o StrictHostKeyChecking=no ~/artifacts/build.zip ec2-user@<< parameters.hostname >>:/tmp

      - run:
          name: Deploy to server
          command: |
            ssh -o StrictHostKeyChecking=no ec2-user@<< parameters.hostname >> \<< EOF
            sudo rm -rf /opt/avni-canned-reports
            sudo unzip -qq /tmp/build.zip -d /opt/avni-canned-reports/
            sudo rm -rf /tmp/build.zip
            EOF

jobs:
  app_test:
    docker:
      - image: cimg/node:15.0.1

    working_directory: ~/avni-canned-reports

    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run: yarn test

  app_build:
    docker:
      - image: cimg/node:15.0.1

    working_directory: ~/avni-canned-reports

    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run: yarn run build

      - run: cd build; zip -r ../build.zip *

      - run: mkdir -p ~/artifacts

      - run: echo $CIRCLE_BUILD_NUM > ~/artifacts/build_version

      - run: cp ~/avni-canned-reports/build.zip ~/artifacts/

      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - build_version
            - build.zip

      - store_artifacts:
          path: ~/artifacts

  STAGING_deploy:
    docker:
      - image: cimg/node:15.0.1
    working_directory: ~/
    steps:
      - deploy:
          hostname: "ssh.staging.openchs.org"

  PRODUCTION_deploy:
    docker:
      - image: cimg/node:15.0.1
    working_directory: ~/
    steps:
      - deploy:
          hostname: "ssh.server.openchs.org"

workflows:
  version: 2
  test_and_build:
    jobs:
      - app_test
      - app_build:
          requires:
            - app_test
      - STAGING_deploy:
          filters:
            branches:
              only: main
          requires:
            - app_build
      - PRODUCTION_approve:
          type: approval
          requires:
            - app_build
      - PRODUCTION_deploy:
          requires:
            - PRODUCTION_approve
